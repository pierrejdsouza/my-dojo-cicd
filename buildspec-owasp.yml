version: 0.2

phases:
  install:
    commands:
      - echo Lets do this
  pre_build:
    commands:
      - echo Lets start the OWASP ZAP scan
      - scanid=$(curl "${ZapUrl}/JSON/ascan/action/scan/?apikey=${ZapApiKey}&url=${AppUrl}&recurse=true&inScopeOnly=&scanPolicyName=&method=&postData=&contextId=" | jq -r '.scan')
      - |
        stat=50;
        while [ "$stat" != 100 ]; do
          stat=$(curl "${ZapUrl}/JSON/ascan/view/status/?apikey=${ZapApiKey}&scanId=$scanid" | jq -r '.status');
          echo "OWASP ZAP scan status is $stat"
          echo "OWASP Zap analysis status is in progress...";
          sleep 5;
        done
        echo "OWASP Zap analysis status is completed..."; 
      - high_alerts=$(curl "${ZapUrl}/JSON/alert/view/alertsSummary/?apikey=${ZapApiKey}&baseurl=${AppUrl}" | jq -r '.alertsSummary.High')
      - medium_alerts=$(curl "${ZapUrl}/JSON/alert/view/alertsSummary/?apikey=${ZapApiKey}&baseurl=${AppUrl}" | jq -r '.alertsSummary.Medium')
      - low_alerts=$(curl "${ZapUrl}/JSON/alert/view/alertsSummary/?apikey=${ZapApiKey}&baseurl=${AppUrl}" | jq -r '.alertsSummary.Low')
      - info_alerts=$(curl "${ZapUrl}/JSON/alert/view/alertsSummary/?apikey=${ZapApiKey}&baseurl=${AppUrl}" | jq -r '.alertsSummary.Informational')
  build:
    commands:
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - curl "${ZapUrl}/OTHER/core/other/jsonreport/?apikey=${ZapApiKey}" | jq . > zap-scan-results.json
      - curl "${ZapUrl}/OTHER/core/other/htmlreport/?apikey=${ZapApiKey}" > ${COMMIT_HASH}.html
      - echo "uploading html report to s3"
      - aws s3 cp ${COMMIT_HASH}.html s3://my-dojo-cicd/
      - echo "build stage completed"
  post_build:
    commands:
      - echo Have alerts?
      - if [ $high_alerts -gt 0 ] || [ $medium_alerts -gt 0 ] || [ $low_alerts -gt 0 ]; then echo "alerts man, failing build" && exit 1; else exit 0; fi
      - echo "high alerts are $high_alerts"
      - echo "medium alerts are $medium_alerts"
      - echo "low alerts are $low_alerts"
      - echo "info alerts are $info_alerts" 
artifacts:
    files: '**/*' 